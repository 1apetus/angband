#
# File: Makefile.std
# Standard makefile for Angband.
#
# This makefile probably requires GNU make.
#
# This makefile is intended for use with Unix machines running X11, gtk,
# (n)curses, termcap, or VT100, Slang, Linux VCS or SVGA library.  You can
# choose what systems below.
#
# You can also place your alterations to a file in the src/ directory called 
# "config", in which case that file will override what is specified here.
#
# If you used to use Makefile.gtk or Makefile.lsl, uncomment the appropriate
# lines below.
#

#### Things you should, or could, change ####


# What systems to try.
#
# By default, this tries to compile both the X11 and "curses" terminal mode
# ports in the same executable.  On Linux only, it also builds the lfb 'console' 
# module.

# IMPORTANT: leave space between '= -D'
SYS_x11 = -DUSE_X11
SYS_gcu = -DUSE_GCU -DUSE_NCURSES
#SYS_xaw = -DUSE_XAW # alternate X11 library
#SYS_gtk = $(shell gtk-config --cflags) -DUSE_GTK
#SYS_sla = -DUSE_SLA -I/usr/include/slang 
#SYS_lsl = -DUSE_LSL # Linux only
#SYS_vcs = -DUSE_VCS # Linux only
SYS_lfb = -DUSE_LFB # Linux only (see below)
#SYS_xpj = -DUSE_XPJ # Experimental. requires X11/Xaw/GTK to be enabled


# Basic compiler stuff
CC = gcc
CFLAGS = -Wall -O2 -fno-strength-reduce
EXE = angband  # Executable name


#### Things you probably shouldn't change, unless there is a problem ####

# Import user prefs
-include config

# Enable what needs enabling
CFLAGS += $(SYS_x11)$(SYS_gcu)$(SYS_xaw)$(SYS_gtk)$(SYS_cap)$(SYS_sla)$(SYS_xpj)


# Check for OS
uname = $(shell uname)

# Enable linux-specific modules, if requested.
ifeq ($(uname),Linux)
  CFLAGS += -DHAVE_MKSTEMP $(SYS_lsl)$(SYS_lfb)$(SYS_vcs)
endif



#### System definitions ####

#
# Support main-x11.c
#
# You may have to add various X11 include/library directories to the
# "CFLAGS", if your machine places files in a weird location, for example
# " -I/usr/X11R6/include", or "-L/usr/X11R6/lib" to LIBS.
#
ifneq ($(SYS_x11),)
  LIBS += -lX11
endif


#
# Support main-gcu.c
#
# If this fails, try replacing "-lncurses" with "-lcurses -ltermcap",
# and removing "-DUSE_NCURSES"
#
# See "main-gcu.c" and "config.h" for some optional "curses" defines,
# including "USE_GETCH" and "USE_CURS_SET".  Note that "config.h" will
# attempt to "guess" at many of these flags based on your system.
# 
# You may have to add " -I/usr/include/ncurses" to CFLAGS.
#
ifneq ($(SYS_gcu),) 
  LIBS += -lncurses
endif


#
# Support main-xaw.c
#
ifneq ($(SYS_xaw),)
  LIBS += -lXaw -lXext -lSM -lICE -lXmu -lXt -lX11
endif


#
# Support main-gtk.c
#
# Note: gtk-config adds GTK and X11 includes and libraries as appropriate.
#
ifneq ($(SYS_gtk),)
  LIBS += `gtk-config --libs`
endif

#
# Support main-lsl.c
#
ifneq ($(SYS_lsl),)
  LIBS += -lz -lvgagl -lvga
endif

#
# Support main-sla.c
#
ifneq ($(SYS_sla),)
  LIBS += -lslang
endif



#### Old definitions, unchanged since at least 2000 ####

##
## Variation -- this might work better than the suggestion above
##
#CFLAGS = -I/usr/include/ncurses \
#         -Wall -O2 -fno-strength-reduce -fomit-frame-pointer \
#         -D"USE_X11" -D"USE_GCU" \
#         -D"USE_TPOSIX" -D"USE_CURS_SET"
#LIBS = -lX11 -lncurses
#LDFLAGS = -s


##
## Variation -- compile for Solaris
##
#CFLAGS = -D"USE_X11" -D"USE_GCU" -D"SOLARIS"
#LIBS = -lX11 -lsocket -lcurses


##
## Variation -- compile for SGI Indigo runnig Irix
##
#CFLAGS = -D"USE_X11" -D"USE_GCU" -D"SGI"
#LIBS = -lX11 -lcurses -ltermcap -lsun


##
## Variation -- compile for Dec ALPHA OSF/1 v2.0
##
#CC     = cc
##CFLAGS = -std -O -g3 -Olimit 4000 -D"USE_X11" -D"USE_GCU"
#CFLAGS = -std -g -D"USE_X11" -D"USE_GCU"
#LIBS   = -lX11 -lcurses -ltermcap -lrpcsvc


##
## Variation -- compile for Interactive Unix (ISC) systems
##
#CFLAGS = -D"USE_X11" -D"USE_GCU" -D"ISC"
#LIBS = -lX11 -lcurses -lnsl_s -linet -lcposix



#### Targets and objects #####

default: angband

# Include the set of object files, and add platform files
OBJEXT=.o
include Makefile.inc
OBJS = $(BASEOBJS) \
  main-cap.o main-gcu.o main-x11.o main-xaw.o main.o \
  main-gtk.o main-lsl.o main-sla.o main-vcs.o main-xpj.o \
  main-lfb.o maid-x11.o


# Build Angband
angband: $(OBJS)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $(EXE) $(OBJS) $(LIBS)

# Install the game.
install: ../$(EXE)

../$(EXE): $(EXE)
	cp $(EXE) ../

# Clean up old junk
clean:
	-rm -f *.o angband

# Generate dependencies automatically
depend:
	makedepend -D__MAKEDEPEND__ $(SRCS)


# Some file dependencies
%.o: %.c $(INCS)
	$(CC) $(CFLAGS) -o $@ -c $<

maid-x11.o: maid-x11.c $(INCS) maid-x11.h
main-cap.o: main-cap.c $(INCS) main.h
main-gcu.o: main-gcu.c $(INCS) main.h
main-gtk.o: main-gtk.c $(INCS) main.h maid-x11.h
main-lsl.o: main-lsl.c $(INCS) main.h
main-sla.o: main-sla.c $(INCS) main.h
main-vcs.o: main-vcs.c $(INCS) main.h
main-x11.o: main-x11.c $(INCS) main.h maid-x11.h
main-xaw.o: main-xaw.c $(INCS) main.h maid-x11.h
main-xpj.o: main-xpj.c $(INCS) main.h maid-x11.h
main-lfb.o: main-lfb.c $(INCS) main.h
main.o: main.c $(INCS) main.h
